/*
 * Copyright (c) 2021 Kokhaviel.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package fr.kokhaviel.api.hypixel.games;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;

/**
 * Duels Hypixel Player Statistics
 *
 * @author Kokhaviel
 * @since 1.0
 */
public class Duels {

	/**
	 * Total Duels Games Played by the Player
	 */
	@SerializedName("games_played_duels")
	int gamesPlayed = 0;

	/**
	 * Total Duels Melee Swings of the Player
	 */
	@SerializedName("melee_swings")
	int meleeSwings = 0;

	/**
	 * Total Duels Melee Hits of the Player
	 */
	@SerializedName("melee_hits")
	int meleeHits = 0;

	/**
	 * Total Duels Wins of the Player
	 */
	@SerializedName("wins")
	int wins = 0;

	/**
	 * Total Duels Rounds Played by the Player
	 */
	@SerializedName("rounds_played")
	int roundsPlayed = 0;

	/**
	 * Total Duels Kills of the Player
	 */
	@SerializedName("kills")
	int kills = 0;

	/**
	 * Total Duels Health Regenerated by the Player
	 */
	@SerializedName("health_regenerated")
	int healthRegenerated = 0;

	/**
	 * Total Duels Damage Dealt by the Player
	 */
	@SerializedName("damage_dealt")
	int damageDealt = 0;

	/**
	 * 3 Most Recent Duels Mode Played by the Player
	 */
	@SerializedName("duels_recently_played")
	String recentPlays = "";

	/**
	 * Total Duels Losses of the Player
	 */
	@SerializedName("losses")
	int losses = 0;

	/**
	 * Total Duels Deaths of the Player
	 */
	@SerializedName("deaths")
	int deaths = 0;

	/**
	 * Total Duels Heal Pots Used by the Player
	 */
	@SerializedName("heal_pots_used")
	int healPotsUsed = 0;

	/**
	 * Current Blitz Kit Used by the Player
	 */
	@SerializedName("blitz_duels_kit")
	String blitzKit = "";

	/**
	 * Current Mega Walls Kit Used by the Player
	 */
	@SerializedName("mw_duels_class")
	String megaWallsKit = "";

	/**
	 * Current Chat Status of the Player (On or Off)
	 */
	@SerializedName("chat_enabled")
	String chatEnabled = "on";

	/**
	 * Total Duels Coins of the Player
	 */
	@SerializedName("coins")
	int coins = 0;

	/**
	 * All Unlocked Duels Packages (Cosmetics) of the Player
	 */
	@SerializedName("packages")
	List<String> unlockedPackages = new ArrayList<>();

	/**
	 * Current Cosmetic Title Used by the Player
	 */
	@SerializedName("active_cosmetictitle")
	String cosmeticTitle = "";

	/**
	 * Total Duels Loot Chests of the Player
	 */
	@SerializedName("duels_chests")
	int lootChests = 0;

	/**
	 * Current Projectile Trail Used by the Player
	 */
	@SerializedName("active_projectile_trail")
	String projectileTrail = "";

	/**
	 * Current Emblem Used by the Player
	 */
	@SerializedName("active_emblem")
	String emblem = "";

	/**
	 * Current Kill Messages Used by the Player
	 */
	@SerializedName("active_killmessages")
	String killMessages = "";

	/**
	 * Current Kill Effect Used by the Player
	 */
	@SerializedName("active_kill_effect")
	String killEffect = "";

	/**
	 * Current Victory Dance Used by the Player
	 */
	@SerializedName("active_victory_dance")
	String victoryDance = "";

	/**
	 * Current Auras Used by the Player
	 */
	@SerializedName("active_auras")
	String auras = "";

	/**
	 * Current Weapon Packs Used by the Player
	 */
	@SerializedName("active_weaponpacks")
	String weaponPacks = "";

	/**
	 * Current Progress Mode of the Player
	 */
	@SerializedName("progress_mode")
	String progressMode = "";

	/**
	 * Current Duels Status of the Player
	 */
	@SerializedName("status_field")
	String status = "";

	/**
	 * Total Duels Blocks Placed by the Player
	 */
	@SerializedName("blocks_placed")
	int blocksPlaced = 0;

	/**
	 * Total Duels Gapple Eaten by the Player
	 */
	@SerializedName("golden_apples_eaten")
	int gappleEaten = 0;

	/**
	 * Total Duels Goals of the Player
	 */
	@SerializedName("goals")
	int goals = 0;

	/**
	 * Current Duels Hat Used by the Player
	 */
	@SerializedName("active_hat")
	String hat = "";

	/**
	 * Current Duels Cage Used by the Player
	 */
	@SerializedName("active_cage")
	String cage = "";

	/**
	 * Current Duels Goal Used by the Player
	 */
	@SerializedName("active_goal")
	String goal = "";


	/**
	 * Uhc Duels Health Regenerated by the Player
	 */
	@SerializedName("uhc_duel_health_regenerated")
	int uhcHealthRegenerated = 0;

	/**
	 * Uhc Duels Losses of the Player
	 */
	@SerializedName("uhc_duel_losses")
	int uhcLosses = 0;

	/**
	 * Uhc Duels Melee Swings of the Player
	 */
	@SerializedName("uhc_duel_melee_swings")
	int uhcMeleeSwings = 0;

	/**
	 * Uhc Duels Rounds Played by the Player
	 */
	@SerializedName("uhc_duel_rounds_played")
	int uhcRoundsPlayed = 0;

	/**
	 * Uhc Duels Deaths of the Player
	 */
	@SerializedName("uhc_duel_deaths")
	int uhcDeaths = 0;

	/**
	 * Uhc Duels Damage Dealt by the Player
	 */
	@SerializedName("uhc_duel_damage_dealt")
	int uhcDamageDealt = 0;

	/**
	 * Uhc Duels Melee Hits of the Player
	 */
	@SerializedName("uhc_duel_melee_hits")
	int uhcMeleeHits = 0;

	/**
	 * Uhc Duels Bow Shots of the Player
	 */
	@SerializedName("uhc_duel_bow_shots")
	int uhcBowShots = 0;

	/**
	 * Uhc Duels Bow Hits of the Player
	 */
	@SerializedName("uhc_duel_bow_hits")
	int uhcBowHits = 0;

	/**
	 * Uhc Duels Kills of the Player
	 */
	@SerializedName("uhc_duel_kills")
	int uhcKills = 0;

	/**
	 * Uhc Duels Wins of the Player
	 */
	@SerializedName("uhc_duel_wins")
	int uhcWins = 0;

	/**
	 * Current Uhc Duels Win Streak of the Player
	 */
	@SerializedName("current_uhc_winstreak")
	int uhcWinStreak = 0;

	/**
	 * Best Uhc Duels Win Streak of the Player
	 */
	@SerializedName("best_uhc_winstreak")
	int bestUhcWinStreak = 0;

	/**
	 * Uhc Duels Blocks Placed by the Player
	 */
	@SerializedName("uhc_duel_blocks_placed")
	int uhcBlocksPlaced = 0;

	/**
	 * Uhc Duels Gapple Eaten by the Player
	 */
	@SerializedName("uhc_duel_golden_apples_eaten")
	int uhcGappleEaten = 0;


	/**
	 * Skywars Duels Blocks Placed by the Player
	 */
	@SerializedName("sw_duel_blocks_placed")
	int skywarsBlocksPlaced = 0;

	/**
	 * Skywars Duels Damage Dealt by the Player
	 */
	@SerializedName("sw_duel_damage_dealt")
	int skywarsDamageDealt = 0;

	/**
	 * Skywars Duels health Regenerated by the Player
	 */
	@SerializedName("sw_duel_health_regenerated")
	int skywarsHealthRegenerated = 0;

	/**
	 * Skywars Duels Kills of the Player
	 */
	@SerializedName("sw_duel_kills")
	int skywarsKills = 0;

	/**
	 * Skywars Duels Melee Hits of the Player
	 */
	@SerializedName("sw_duel_melee_hits")
	int skywarsMeleeHits = 0;

	/**
	 * Skywars Duels Melee Swings of the Player
	 */
	@SerializedName("sw_duel_melee_swings")
	int skywarsMeleeSwings = 0;

	/**
	 * Skywars Duels Rounds Played by the Player
	 */
	@SerializedName("sw_duel_rounds_played")
	int skywarsRoundsPlayed = 0;

	/**
	 * Skywars Duels Wins of the Player
	 */
	@SerializedName("sw_duel_wins")
	int skywarsWins = 0;

	/**
	 * Skywars Duels Bow Hits of the Player
	 */
	@SerializedName("sw_duel_bow_hits")
	int skywarsBowHits = 0;

	/**
	 * Skywars Duels Bow Shots of the Player
	 */
	@SerializedName("sw_duel_bow_shots")
	int skywarsBowShots = 0;

	/**
	 * Skywars Duels Deaths of the Player
	 */
	@SerializedName("sw_duel_deaths")
	int skywarsDeaths = 0;

	/**
	 * Skywars Duels Losses of the Player
	 */
	@SerializedName("sw_duel_losses")
	int skywarsLosses = 0;

	/**
	 * Skywars Duels Current Winstreak of the Player
	 */
	@SerializedName("current_skywars_winstreak")
	int skywarsWinstreak = 0;

	/**
	 * Skywars Duels Best Winstreak of the Player
	 */
	@SerializedName("best_skywars_winstreak")
	int bestSkywarsWinstreak = 0;


	/**
	 * Current Mega Walls Duels Winstreak of the Player
	 */
	@SerializedName("current_mega_walls_winstreak")
	int megaWallsWinstreak = 0;

	/**
	 * Best Mega Walls Duels Winstreak of the Player
	 */
	@SerializedName("best_mega_walls_winstreak")
	int bestMegaWallsWinstreak = 0;

	/**
	 * Mega Walls Duels Blocks Placed by the Player
	 */
	@SerializedName("mw_duel_blocks_placed")
	int megaWallsBlocksPlaced = 0;

	/**
	 * Mega Walls Duels Bow Hits of the Player
	 */
	@SerializedName("mw_duel_bow_hits")
	int megaWallsBowHits = 0;

	/**
	 * Mega Walls Duels Bow Shots of the Player
	 */
	@SerializedName("mw_duel_bow_shots")
	int megaWallsBowShots = 0;

	/**
	 * Mega Walls Duels Damage Dealt by the Player
	 */
	@SerializedName("mw_duel_damage_dealt")
	int megaWallsDamageDealt = 0;

	/**
	 * Mega Walls Duels Deaths of the Player
	 */
	@SerializedName("mw_duel_deaths")
	int megaWallsDeaths = 0;

	/**
	 * Mega Walls Duels Health Regenerated by the Player
	 */
	@SerializedName("mw_duel_health_regenerated")
	int megaWallsHealthRegenerated = 0;

	/**
	 * Mega Walls Duels Losses of the Player
	 */
	@SerializedName("mw_duel_losses")
	int megaWallsLosses = 0;

	/**
	 * Mega Walls Duels Melee Hits of the Player
	 */
	@SerializedName("mw_duel_melee_hits")
	int megaWallsMeleeHits = 0;

	/**
	 * Mega Walls Duels Melee Swings of the Player
	 */
	@SerializedName("mw_duel_melee_swings")
	int megaWallsMeleeSwings = 0;

	/**
	 * Mega Walls Duels Rounds Played by the Player
	 */
	@SerializedName("mw_duel_rounds_played")
	int megaWallsRoundsPlayed = 0;

	/**
	 * Mega Walls Duels Kills of the Player
	 */
	@SerializedName("mw_duel_kills")
	int megaWallsKills = 0;

	/**
	 * Mega Walls Duels Wins of the Player
	 */
	@SerializedName("mw_duel_wins")
	int megaWallsWins = 0;


	/**
	 * Current Blitz Duels Winstreak of the Player
	 */
	@SerializedName("current_blitz_winstreak")
	int blitzWinstreak = 0;

	/**
	 * Best Blitz Duels Winstreak of the Player
	 */
	@SerializedName("best_blitz_winstreak")
	int bestBlitzWinstreak = 0;

	/**
	 * Blitz Duels Melee Swings of the Player
	 */
	@SerializedName("blitz_duel_melee_swings")
	int blitzMeleeSwings = 0;

	/**
	 * Blitz Duels Damage Dealt of the Player
	 */
	@SerializedName("blitz_duel_damage_dealt")
	int blitzDamageDealt = 0;

	/**
	 * Blitz Melee Hits of the Player
	 */
	@SerializedName("blitz_duel_melee_hits")
	int blitzMeleeHits = 0;

	/**
	 * Blitz Duels Rounds Played by the Player
	 */
	@SerializedName("blitz_duel_rounds_played")
	int blitzRoundsPlayed = 0;

	/**
	 * Blitz Duels Wins of the Player
	 */
	@SerializedName("blitz_duel_wins")
	int blitzWins = 0;

	/**
	 * Blitz Duels Health Regenerated by the Player
	 */
	@SerializedName("blitz_duel_health_regenerated")
	int blitzHealthRegenerated = 0;

	/**
	 * Blitz Duels Kills of the Player
	 */
	@SerializedName("blitz_duel_kills")
	int blitzKills = 0;

	/**
	 * Blitz Duels Losses of the Player
	 */
	@SerializedName("blitz_duel_losses")
	int blitzLosses = 0;

	/**
	 * Blitz Duels Deaths of the Player
	 */
	@SerializedName("blitz_duel_deaths")
	int blitzDeaths = 0;

	/**
	 * Blitz Duels Bow Shots of the Player
	 */
	@SerializedName("blitz_duel_bow_shots")
	int blitzBowShots = 0;

	/**
	 * Blitz Duels Bow Hits of the Player
	 */
	@SerializedName("blitz_duel_bow_hits")
	int blitzBowHits = 0;

	/**
	 * Blitz Duels Blocks Placed by the Player
	 */
	@SerializedName("blitz_duel_blocks_placed")
	int blitzBlocksPlaced = 0;


	/**
	 * Op Duels Damage Dealt by the Player
	 */
	@SerializedName("op_duel_damage_dealt")
	int opDamageDealt = 0;

	/**
	 * Op Duels Kills of the Player
	 */
	@SerializedName("op_duel_kills")
	int opKills = 0;

	/**
	 * Op Duels Melee Swings of the Player
	 */
	@SerializedName("op_duel_melee_swings")
	int opMeleeSwings = 0;

	/**
	 * Op Duels Melee Hits of the Player
	 */
	@SerializedName("op_duel_melee_hits")
	int opMeleeHits = 0;

	/**
	 * Op Duels Health Regenerated by the Player
	 */
	@SerializedName("op_duel_health_regenerated")
	int opHealthRegenerated = 0;

	/**
	 * Op Duels Wins of the Player
	 */
	@SerializedName("op_duel_wins")
	int opWins = 0;

	/**
	 * Op Duels Rounds Played by the Player
	 */
	@SerializedName("op_duel_rounds_played")
	int opRoundsPlayed = 0;

	/**
	 * Op Duels Deaths of the Player
	 */
	@SerializedName("op_duel_deaths")
	int opDeaths = 0;

	/**
	 * Op Duels Losses of the Player
	 */
	@SerializedName("op_duel_losses")
	int opLosses = 0;

	/**
	 * Op Duels Bow Shots of the Player
	 */
	@SerializedName("op_duel_bow_shots")
	int opBowShots = 0;

	/**
	 * Op Duels Bow Hits of the Player
	 */
	@SerializedName("op_duel_bow_hits")
	int opBowHits = 0;

	/**
	 * Current Op Duels Winstreak of the Player
	 */
	@SerializedName("current_op_winstreak")
	int opWinstreak = 0;

	/**
	 * Best Op Duels Winstreak of the Player
	 */
	@SerializedName("best_op_winstreak")
	int bestOpWinstreak = 0;


	/**
	 * Classic Duels Bow Hits of the Player
	 */
	@SerializedName("classic_duel_bow_hits")
	int classicBowHits = 0;

	/**
	 * Classic Duels Bow Shots of the Player
	 */
	@SerializedName("classic_duel_bow_shots")
	int classicBowShots = 0;

	/**
	 * Classic Duels Damage Dealt by the Player
	 */
	@SerializedName("classic_duel_damage_dealt")
	int classicDamageDealt = 0;

	/**
	 * Classic Duels Health Regenerated by the Player
	 */
	@SerializedName("classic_duel_health_regenerated")
	int classicHealthRegenerated = 0;

	/**
	 * Classic Duels Melee Hits of the Player
	 */
	@SerializedName("classic_duel_melee_hits")
	int classicMeleeHits = 0;

	/**
	 * Classic Duels Melee Swings of the Player
	 */
	@SerializedName("classic_duel_melee_swings")
	int classicMeleeSwings = 0;

	/**
	 * Classic Duels Rounds Played by the Player
	 */
	@SerializedName("classic_duel_rounds_played")
	int classicRoundsPlayed = 0;

	/**
	 * Best Classic Duels Winstreak of the Player
	 */
	@SerializedName("best_classic_winstreak")
	int bestClassicWinstreak = 0;

	/**
	 * Current Classic Duels Winstreak of the Player
	 */
	@SerializedName("current_classic_winstreak")
	int currentClassicWinstreak = 0;

	/**
	 * Classic Duels Kills of the Player
	 */
	@SerializedName("classic_duel_kills")
	int classicKills = 0;

	/**
	 * Classic Duels Wins of the Player
	 */
	@SerializedName("classic_duel_wins")
	int classicWins = 0;

	/**
	 * Classic Duels Deaths of the Player
	 */
	@SerializedName("classic_duel_deaths")
	int classicDeaths = 0;

	/**
	 * Classic Duels Losses of the Player
	 */
	@SerializedName("classic_duel_losses")
	int classicLosses = 0;


	/**
	 * Bow Duels Bow Hits of the Player
	 */
	@SerializedName("bow_duel_bow_hits")
	int bowBowHits = 0;

	/**
	 * Bow Duels Wins of the Player
	 */
	@SerializedName("bow_duel_wins")
	int bowWins = 0;

	/**
	 * Bow Duels Bow Shots of the Player
	 */
	@SerializedName("bow_duel_bow_shots")
	int bowBowShots = 0;

	/**
	 * Bow Duels Health Regenerated by the Player
	 */
	@SerializedName("bow_duel_health_regenerated")
	int bowHealthRegenerated = 0;

	/**
	 * Bow Duels Kills of the Player
	 */
	@SerializedName("bow_duel_kills")
	int bowKills = 0;

	/**
	 * Bow Duels Damage Dealt by the Player
	 */
	@SerializedName("bow_duel_damage_dealt")
	int bowDamageDealt = 0;

	/**
	 * Bow Duels Rounds Played by the Player
	 */
	@SerializedName("bow_duel_rounds_played")
	int bowRoundsPlayed = 0;

	/**
	 * Bow Duels Deaths of the Player
	 */
	@SerializedName("bow_duel_deaths")
	int bowDeaths = 0;

	/**
	 * Bow Duels Losses of the Player
	 */
	@SerializedName("bow_duel_losses")
	int bowLosses = 0;

	/**
	 * Current Bow Duels Winstreak of the Player
	 */
	@SerializedName("current_bow_winstreak")
	int bowWinstreak = 0;

	/**
	 * Best Bow Duels Winstreak of the Player
	 */
	@SerializedName("best_bow_winstreak")
	int bestBowWinstreak = 0;


	/**
	 * Current No Debuff Winstreak of the Player
	 */
	@SerializedName("current_no_debuff_winstreak")
	int noDebuffWinstreak = 0;

	/**
	 * Best No Debuff Winstreak of the Player
	 */
	@SerializedName("best_no_debuff_winstreak")
	int bestNoDebuffWinstreak = 0;


	/**
	 * Combo Duels Melee Hits of the Player
	 */
	@SerializedName("combo_duel_melee_hits")
	int comboMeleeHits = 0;

	/**
	 * Combo Duels Losses of the Player
	 */
	@SerializedName("combo_duel_losses")
	int comboLosses = 0;

	/**
	 * Combo Duels Rounds Played by the Player
	 */
	@SerializedName("combo_duel_rounds_played")
	int comboRoundsPlayed = 0;

	/**
	 * Combo Duels Health Regenerated by the Player
	 */
	@SerializedName("combo_duel_health_regenerated")
	int comboHealthRegenerated = 0;

	/**
	 * Combo Duels Damage Dealt by the Player
	 */
	@SerializedName("combo_duel_damage_dealt")
	int comboDamageDealt = 0;

	/**
	 * Combo Duels Deaths of the Player
	 */
	@SerializedName("combo_duel_deaths")
	int comboDeaths = 0;

	/**
	 * Combo Duels Melee Swings of the Player
	 */
	@SerializedName("combo_duel_melee_swings")
	int comboDuelsMeleeSwings = 0;

	/**
	 * Combo Duels Bow Hits of the Player
	 */
	@SerializedName("combo_duel_bow_hits")
	int comboBowHits = 0;

	/**
	 * Combo Duels Wins of the Player
	 */
	@SerializedName("combo_duel_wins")
	int comboWins = 0;

	/**
	 * Combo Duels Kills of the Player
	 */
	@SerializedName("combo_duel_kills")
	int comboKills = 0;

	/**
	 * Current Combo Duels Winstreak of the Player
	 */
	@SerializedName("current_combo_winstreak")
	int comboWinstreak = 0;

	/**
	 * Best Combo Duels Winstreak of the Player
	 */
	@SerializedName("best_combo_winstreak")
	int bestComboWinstreak = 0;

	/**
	 * Combo Duels Gapple Eaten by the Player
	 */
	@SerializedName("combo_duel_golden_apples_eaten")
	int comboGappleEaten = 0;


	/**
	 * Sumo Duels Melee Hits of the Player
	 */
	@SerializedName("sumo_duel_melee_hits")
	int sumoMeleeHits = 0;

	/**
	 * Sumo Duels Melee Swings of the Player
	 */
	@SerializedName("sumo_duel_melee_swings")
	int sumoMeleeSwings = 0;

	/**
	 * Sumo Duels Rounds Played by the Player
	 */
	@SerializedName("sumo_duel_rounds_played")
	int sumoRoundsPlayed = 0;

	/**
	 * Current Sumo Duels Winstreak of the Player
	 */
	@SerializedName("current_sumo_winstreak")
	int sumoWinstreak = 0;

	/**
	 * Best Sumo Duels Winstreak of the Player
	 */
	@SerializedName("best_sumo_winstreak")
	int bestSumoWinstreak = 0;

	/**
	 * Sumo Duels Kills of the Player
	 */
	@SerializedName("sumo_duel_kills")
	int sumoKills = 0;

	/**
	 * Sumo Duels Wins of the Player
	 */
	@SerializedName("sumo_duel_wins")
	int sumoWins = 0;

	/**
	 * Sumo Duels Deaths of the Player
	 */
	@SerializedName("sumo_duel_deaths")
	int sumoDeaths = 0;

	/**
	 * Sumo Duels Losses of the Player
	 */
	@SerializedName("sumo_duel_losses")
	int sumoLosses = 0;


	/**
	 * Current Bridge Duels Winstreak of the Player
	 */
	@SerializedName("current_bridge_winstreak")
	int bridgeWinstreak = 0;

	/**
	 * Best Bridge Winstreak of the Player
	 */
	@SerializedName("best_bridge_winstreak")
	int bestBridgeWinstreak = 0;

	/**
	 * Bridge Duels Health Regenerated by the Player
	 */
	@SerializedName("bridge_duel_health_regenerated")
	int bridgeHealthRegenerated = 0;

	/**
	 * Bridge Duels Goals of the Player
	 */
	@SerializedName("bridge_duel_goals")
	int bridgeGoals = 0;

	/**
	 * Bridge Duels Damage Dealt by the Player
	 */
	@SerializedName("bridge_duel_damage_dealt")
	int bridgeDamageDealt = 0;

	/**
	 * Bridge Duels Melee Hits of the Player
	 */
	@SerializedName("bridge_duel_melee_hits")
	int bridgeMeleeHits = 0;

	/**
	 * Bridge Duels Blocks Placed by the Player
	 */
	@SerializedName("bridge_duel_blocks_placed")
	int bridgeBlocksPlaced = 0;

	/**
	 * Bridge Duels Melee Swings
	 */
	@SerializedName("bridge_duel_melee_swings")
	int bridgeMeleeSwings = 0;

	/**
	 * Bridge Duels Deaths of the Player
	 */
	@SerializedName("bridge_duel_deaths")
	int bridgeDeaths = 0;

	/**
	 * Bridge Duels Kills of the Player
	 */
	@SerializedName("bridge_duel_kills")
	int bridgeKills = 0;

	/**
	 * Bridge Duels Rounds played by the Player
	 */
	@SerializedName("bridge_duel_rounds_played")
	int bridgeRoundsPlayed = 0;

	/**
	 * Bridge Duels Wins of the Player
	 */
	@SerializedName("bridge_duel_wins")
	int bridgeWins = 0;

	/**
	 * Bridge Duels Bow Shots of the Player
	 */
	@SerializedName("bridge_duel_bow_shots")
	int bridgeBowShots = 0;

	/**
	 * Bridge Duels Losses of the Player
	 */
	@SerializedName("bridge_duel_losses")
	int bridgeLosses = 0;

	/**
	 * Bridge Duels Bow Hits of the Player
	 */
	@SerializedName("bridge_duel_bow_hits")
	int bridgeBowHits = 0;


	/**
	 * Get Total Duels Games Played by the Player
	 *
	 * @return Games Played
	 */
	public int getGamesPlayed() {
		return gamesPlayed;
	}

	/**
	 * Get Total Melee Swings of the Player
	 *
	 * @return Melee Swings
	 */
	public int getMeleeSwings() {
		return meleeSwings;
	}

	/**
	 * Get Total Melee Hits of the Player
	 *
	 * @return Melee Hits
	 */
	public int getMeleeHits() {
		return meleeHits;
	}

	/**
	 * Get Total Wins of the Player
	 *
	 * @return Wins
	 */
	public int getWins() {
		return wins;
	}

	/**
	 * Get Total Rounds Played by the Player
	 *
	 * @return Rounds Played
	 */
	public int getRoundsPlayed() {
		return roundsPlayed;
	}

	/**
	 * Get Total Kills of the Player
	 *
	 * @return Kills
	 */
	public int getKills() {
		return kills;
	}

	/**
	 * Get Total Health Regenerated by the Player
	 *
	 * @return Health Regenerated
	 */
	public int getHealthRegenerated() {
		return healthRegenerated;
	}

	/**
	 * Get Total Damage Dealt by the Player
	 *
	 * @return Damage Dealt
	 */
	public int getDamageDealt() {
		return damageDealt;
	}

	/**
	 * Get 3 Most Recent Duel Mode Played by the Player
	 *
	 * @return Recent Plays
	 */
	public String getRecentPlays() {
		return recentPlays;
	}

	/**
	 * Get Total Losses of the Player
	 *
	 * @return Losses
	 */
	public int getLosses() {
		return losses;
	}

	/**
	 * Get Total Deaths of the Player
	 *
	 * @return Deaths
	 */
	public int getDeaths() {
		return deaths;
	}

	/**
	 * Get Total Heal Pots Used by the Player
	 *
	 * @return Heal Pots Used
	 */
	public int getHealPotsUsed() {
		return healPotsUsed;
	}

	/**
	 * Get Current Blitz Kit Used by the Player
	 *
	 * @return Blitz Kit Name
	 */
	public String getBlitzKit() {
		return blitzKit;
	}

	/**
	 * Get Current Mega Walls Class (Kit) Used by the Player
	 *
	 * @return Mega Walls Class Name
	 */
	public String getMegaWallsKit() {
		return megaWallsKit;
	}

	/**
	 * Get Chat Status of the Player (On or Off)
	 *
	 * @return Chat Status
	 */
	public String getChatEnabled() {
		return chatEnabled;
	}

	/**
	 * Get Total Duels Coins of the Player
	 *
	 * @return Coins
	 */
	public int getCoins() {
		return coins;
	}

	/**
	 * Get All Unlocked Packages (Cosmetics) of the Player
	 *
	 * @return List of All Packages
	 */
	public List<String> getUnlockedPackages() {
		return unlockedPackages;
	}

	/**
	 * Get Current Duels Cosmetics Title Used by the Player
	 *
	 * @return Cosmetics Title
	 */
	public String getCosmeticTitle() {
		return cosmeticTitle;
	}

	/**
	 * Get Total Loot Chests of the Player
	 *
	 * @return Loot Chests Available
	 */
	public int getLootChests() {
		return lootChests;
	}

	/**
	 * Get Current Duels Projectile Trail Used by the Player
	 *
	 * @return Projectile Trail Name
	 */
	public String getProjectileTrail() {
		return projectileTrail;
	}

	/**
	 * Get Current Duels Emblem Used by the Player
	 *
	 * @return Emblem Name
	 */
	public String getEmblem() {
		return emblem;
	}

	/**
	 * Get Current Kill Message Used by the Player
	 *
	 * @return Kill Message Name
	 */
	public String getKillMessages() {
		return killMessages;
	}

	/**
	 * Get Current Kill Effect Used by the Player
	 *
	 * @return Kill Effect Name
	 */
	public String getKillEffect() {
		return killEffect;
	}

	/**
	 * Get Current Victory Dance Used by the Player
	 *
	 * @return Victory Dance Name
	 */
	public String getVictoryDance() {
		return victoryDance;
	}

	/**
	 * Get Current Aura Used by the Player
	 *
	 * @return Aura Name
	 */
	public String getAuras() {
		return auras;
	}

	/**
	 * Get Current Weapon Pack Used by the Player
	 *
	 * @return Weapon Pack Name
	 */
	public String getWeaponPacks() {
		return weaponPacks;
	}

	/**
	 * Get Current Progress Mode of the Player
	 *
	 * @return Progress Mode Name
	 */
	public String getProgressMode() {
		return progressMode;
	}

	/**
	 * Get Current Status Used by the Player
	 *
	 * @return Status Content
	 */
	public String getStatus() {
		return status;
	}

	/**
	 * Get Total Blocks Placed by the Player
	 *
	 * @return Blocks Placed
	 */
	public int getBlocksPlaced() {
		return blocksPlaced;
	}

	/**
	 * Get Total Gapple Eaten by the Player
	 *
	 * @return Gapple Eaten
	 */
	public int getGappleEaten() {
		return gappleEaten;
	}

	/**
	 * Get Total Goals of the Player
	 *
	 * @return Goals
	 */
	public int getGoals() {
		return goals;
	}

	/**
	 * Get Current Hat Used by the Player
	 *
	 * @return Hat Name
	 */
	public String getHat() {
		return hat;
	}

	/**
	 * Get Current Cage Used by the Player
	 *
	 * @return Cage Name
	 */
	public String getCage() {
		return cage;
	}

	/**
	 * Get Current Bridge Goal Used by the Player
	 *
	 * @return Goal Name
	 */
	public String getGoal() {
		return goal;
	}

	/**
	 * Get Uhc Mode Health Regenerated by the Player
	 *
	 * @return Uhc Health Regenerated
	 */
	public int getUhcHealthRegenerated() {
		return uhcHealthRegenerated;
	}

	/**
	 * Get Uhc Mode Losses of the Player
	 *
	 * @return Uhc Losses
	 */
	public int getUhcLosses() {
		return uhcLosses;
	}

	/**
	 * Get Uhc Mode Melee Swings of the Player
	 *
	 * @return Uhc Melee Swings
	 */
	public int getUhcMeleeSwings() {
		return uhcMeleeSwings;
	}

	/**
	 * Get Uhc Mode Rounds Played by the Player
	 *
	 * @return Uhc Rounds Played
	 */
	public int getUhcRoundsPlayed() {
		return uhcRoundsPlayed;
	}

	/**
	 * Get Uhc Mode Deaths of the Player
	 *
	 * @return Uhc Deaths
	 */
	public int getUhcDeaths() {
		return uhcDeaths;
	}

	/**
	 * Get Uhc Mode Damage Dealt by the Player
	 *
	 * @return Uhc Damage Dealt
	 */
	public int getUhcDamageDealt() {
		return uhcDamageDealt;
	}

	/**
	 * Get Uhc Mode Melee Hits of the Player
	 *
	 * @return Uhc Melee Hits
	 */
	public int getUhcMeleeHits() {
		return uhcMeleeHits;
	}

	/**
	 * Get Uhc Mode Bow Shots of the Player
	 *
	 * @return Uhc Bow Shots
	 */
	public int getUhcBowShots() {
		return uhcBowShots;
	}

	/**
	 * Get Uhc Mode Bow Hits of the Player
	 *
	 * @return Uhc Bow Hits
	 */
	public int getUhcBowHits() {
		return uhcBowHits;
	}

	/**
	 * Get Uhc Mode Kills of the Player
	 *
	 * @return Uhc Kills
	 */
	public int getUhcKills() {
		return uhcKills;
	}

	/**
	 * Get Uhc Mode Wins of the Player
	 *
	 * @return Uhc Wins
	 */
	public int getUhcWins() {
		return uhcWins;
	}

	/**
	 * Get Uhc Mode Winstreak of the Player
	 *
	 * @return Uhc Winstreak
	 */
	public int getUhcWinStreak() {
		return uhcWinStreak;
	}

	/**
	 * Get Best Uhc Mode Winstreak of the Player
	 *
	 * @return Best Uhc Winstreak
	 */
	public int getBestUhcWinStreak() {
		return bestUhcWinStreak;
	}

	/**
	 * Get Uhc Mode Blocks Placed by the Player
	 *
	 * @return Uhc Blocks Placed
	 */
	public int getUhcBlocksPlaced() {
		return uhcBlocksPlaced;
	}

	/**
	 * Get Uhc Mode Gapple Eaten by the Player
	 *
	 * @return Uhc Gapple Eaten
	 */
	public int getUhcGappleEaten() {
		return uhcGappleEaten;
	}

	/**
	 * Get Skywars Mode Blocks Placed by the Player
	 *
	 * @return Skywars Blocks Placed
	 */
	public int getSkywarsBlocksPlaced() {
		return skywarsBlocksPlaced;
	}

	/**
	 * Get Skywars Mode Damage Dealt by the Player
	 *
	 * @return Skywars Damage Dealt
	 */
	public int getSkywarsDamageDealt() {
		return skywarsDamageDealt;
	}

	/**
	 * Get Skywars Mode Health Regenerated by the Player
	 *
	 * @return Skywars Health Regenerated
	 */
	public int getSkywarsHealthRegenerated() {
		return skywarsHealthRegenerated;
	}

	/**
	 * Get Skywars Mode Kills of the Player
	 *
	 * @return Skywars Kills
	 */
	public int getSkywarsKills() {
		return skywarsKills;
	}

	/**
	 * Get Skywars Mode Melee Hits of the Player
	 *
	 * @return Skywars Melee Hits
	 */
	public int getSkywarsMeleeHits() {
		return skywarsMeleeHits;
	}

	/**
	 * Get Skywars Mode Melee Swings of the Player
	 *
	 * @return Skywars Melee Swings
	 */
	public int getSkywarsMeleeSwings() {
		return skywarsMeleeSwings;
	}

	/**
	 * Get Skywars Mode Rounds Played by the Player
	 *
	 * @return Skywars Rounds Played
	 */
	public int getSkywarsRoundsPlayed() {
		return skywarsRoundsPlayed;
	}

	/**
	 * Get Skywars Mode Wins of the Player
	 *
	 * @return Skywars Wins
	 */
	public int getSkywarsWins() {
		return skywarsWins;
	}

	/**
	 * Get Skywars Mode Bow Hits of the Player
	 *
	 * @return Skywars Bow Hits
	 */
	public int getSkywarsBowHits() {
		return skywarsBowHits;
	}

	/**
	 * Get Skywars Mode Bow Shots of the Player
	 *
	 * @return Skywars Bow Shots
	 */
	public int getSkywarsBowShots() {
		return skywarsBowShots;
	}

	/**
	 * Get Skywars Mode Deaths of the Player
	 *
	 * @return Skywars Deaths
	 */
	public int getSkywarsDeaths() {
		return skywarsDeaths;
	}

	/**
	 * Get Skywars Mode Losses of the Player
	 *
	 * @return Skywars Losses
	 */
	public int getSkywarsLosses() {
		return skywarsLosses;
	}

	/**
	 * Get Current Skywars Mode Winstreak of the Player
	 *
	 * @return Current Skywars Winstreak
	 */
	public int getSkywarsWinstreak() {
		return skywarsWinstreak;
	}

	/**
	 * Get Best Skywars Mode Winstreak of the Player
	 *
	 * @return Best Skywars Winstreak
	 */
	public int getBestSkywarsWinstreak() {
		return bestSkywarsWinstreak;
	}

	/**
	 * Get Current Mega Walls Mode Winstreak of the Player
	 *
	 * @return Current Mega Walls Winstreak
	 */
	public int getMegaWallsWinstreak() {
		return megaWallsWinstreak;
	}

	/**
	 * Get Best Mega Walls Mode Winstreak of the Player
	 *
	 * @return Best Mega Walls Winstreak
	 */
	public int getBestMegaWallsWinstreak() {
		return bestMegaWallsWinstreak;
	}

	/**
	 * Get Mega Walls Mode Blocks Placed by the Player
	 *
	 * @return Mega Walls Blocks Placed
	 */
	public int getMegaWallsBlocksPlaced() {
		return megaWallsBlocksPlaced;
	}

	/**
	 * Get Mega Walls Mode Bow Hits of the Player
	 *
	 * @return Mega Walls Bow Hits
	 */
	public int getMegaWallsBowHits() {
		return megaWallsBowHits;
	}

	/**
	 * Get Mega Walls Mode Bow Shots of the Player
	 *
	 * @return Mega Walls Bow Shots
	 */
	public int getMegaWallsBowShots() {
		return megaWallsBowShots;
	}

	/**
	 * Get Mega Walls Mode Damage Dealt by the Player
	 *
	 * @return Mega Walls Damage Dealt
	 */
	public int getMegaWallsDamageDealt() {
		return megaWallsDamageDealt;
	}

	/**
	 * Get Mega Walls Mode Deaths of the Player
	 *
	 * @return Mega Walls Deaths
	 */
	public int getMegaWallsDeaths() {
		return megaWallsDeaths;
	}

	/**
	 * Get Mega Walls Health Regenerated by the Player
	 *
	 * @return Mega Walls Health Regenerated
	 */
	public int getMegaWallsHealthRegenerated() {
		return megaWallsHealthRegenerated;
	}

	/**
	 * Get Mega Walls Losses of the Player
	 *
	 * @return Mega Walls Losses
	 */
	public int getMegaWallsLosses() {
		return megaWallsLosses;
	}

	/**
	 * Get Mega Walls Mode Melee Hits of the Player
	 *
	 * @return Mega Walls Melee Hits
	 */
	public int getMegaWallsMeleeHits() {
		return megaWallsMeleeHits;
	}

	/**
	 * Get Mega Walls Mode Melee Swings of the Player
	 *
	 * @return Mega Walls Melee Swings
	 */
	public int getMegaWallsMeleeSwings() {
		return megaWallsMeleeSwings;
	}

	/**
	 * Get Mega Walls Mode Rounds Played by the Player
	 *
	 * @return Mega Walls Rounds Played
	 */
	public int getMegaWallsRoundsPlayed() {
		return megaWallsRoundsPlayed;
	}

	/**
	 * Get Mega Walls Mode Kills of the Player
	 *
	 * @return Mega WWalls Kills
	 */
	public int getMegaWallsKills() {
		return megaWallsKills;
	}

	/**
	 * Get Mega Walls Mode Wins of the Player
	 *
	 * @return Mega Walls Wins
	 */
	public int getMegaWallsWins() {
		return megaWallsWins;
	}

	/**
	 * Get Current Blitz Mode Winstreak of the Player
	 *
	 * @return Current Blitz Winstreak
	 */
	public int getBlitzWinstreak() {
		return blitzWinstreak;
	}

	/**
	 * Get Best Blitz Mode Winstreak of the Player
	 *
	 * @return Best Blitz Winstreak
	 */
	public int getBestBlitzWinstreak() {
		return bestBlitzWinstreak;
	}

	/**
	 * Get Blitz Mode Melee Swings of the Player
	 *
	 * @return Blitz Melee Swings
	 */
	public int getBlitzMeleeSwings() {
		return blitzMeleeSwings;
	}

	/**
	 * Get Blitz Mode Damage Dealt by the Player
	 *
	 * @return Blitz Damage Dealt
	 */
	public int getBlitzDamageDealt() {
		return blitzDamageDealt;
	}

	/**
	 * Get Blitz Mode Melee Hits of the Player
	 *
	 * @return Blitz Melee Hits
	 */
	public int getBlitzMeleeHits() {
		return blitzMeleeHits;
	}

	/**
	 * Get Blitz Mode Rounds Played by the Player
	 *
	 * @return Blitz Rounds Played
	 */
	public int getBlitzRoundsPlayed() {
		return blitzRoundsPlayed;
	}

	/**
	 * Get Blitz Mode Wins of the Player
	 *
	 * @return Blitz Wins
	 */
	public int getBlitzWins() {
		return blitzWins;
	}

	/**
	 * Get Blitz Mode Health Regenerated by the Player
	 *
	 * @return Blitz Health Regenerated
	 */
	public int getBlitzHealthRegenerated() {
		return blitzHealthRegenerated;
	}

	/**
	 * Get Blitz Mode Kills of the Player
	 *
	 * @return Blitz Kills
	 */
	public int getBlitzKills() {
		return blitzKills;
	}

	/**
	 * Get Blitz Mode Losses of the Player
	 *
	 * @return Blitz Losses
	 */
	public int getBlitzLosses() {
		return blitzLosses;
	}

	/**
	 * Get Blitz Mode Deaths of the Player
	 *
	 * @return Blitz Deaths
	 */
	public int getBlitzDeaths() {
		return blitzDeaths;
	}

	/**
	 * Get Blitz Mode Bow Shots of the Player
	 *
	 * @return Blitz Bow Shots
	 */
	public int getBlitzBowShots() {
		return blitzBowShots;
	}

	/**
	 * Get Blitz Mode Bow Hits of the Player
	 *
	 * @return Blitz Bow Hits
	 */
	public int getBlitzBowHits() {
		return blitzBowHits;
	}

	/**
	 * Get Blitz Mode Blocks Placed by the Player
	 *
	 * @return Blitz Blocs Placed
	 */
	public int getBlitzBlocksPlaced() {
		return blitzBlocksPlaced;
	}

	/**
	 * Get Blitz Mode Damage Dealt by the Player
	 *
	 * @return Blitz Damage Dealt
	 */
	public int getOpDamageDealt() {
		return opDamageDealt;
	}

	/**
	 * Get Op Mode Kills of the Player
	 *
	 * @return Op Kills
	 */
	public int getOpKills() {
		return opKills;
	}

	/**
	 * Get Op Mode Melee Swings of the Player
	 *
	 * @return Op Melee Swings
	 */
	public int getOpMeleeSwings() {
		return opMeleeSwings;
	}

	/**
	 * Get Op Mode Melee Hits of the Player
	 *
	 * @return Op Melee Hits
	 */
	public int getOpMeleeHits() {
		return opMeleeHits;
	}

	/**
	 * Get Op Mode Health Regenerated by the Player
	 *
	 * @return Op Health Regenerated
	 */
	public int getOpHealthRegenerated() {
		return opHealthRegenerated;
	}

	/**
	 * Get Op Mode Wins of the Player
	 *
	 * @return Op Wins
	 */
	public int getOpWins() {
		return opWins;
	}

	/**
	 * Get Op Mode Rounds Played by the Player
	 *
	 * @return Op Rounds Played
	 */
	public int getOpRoundsPlayed() {
		return opRoundsPlayed;
	}

	/**
	 * Get Op Mode Deaths of the Player
	 *
	 * @return Op Deaths
	 */
	public int getOpDeaths() {
		return opDeaths;
	}

	/**
	 * Get Op Mode Losses of the Player
	 *
	 * @return Op Losses
	 */
	public int getOpLosses() {
		return opLosses;
	}

	/**
	 * Get Op Mode Bow Shots of the Player
	 *
	 * @return Op Bow Shots
	 */
	public int getOpBowShots() {
		return opBowShots;
	}

	/**
	 * Get Op Mode Bow Hits of the Player
	 *
	 * @return Op Bow Hits
	 */
	public int getOpBowHits() {
		return opBowHits;
	}

	/**
	 * Get Current Op Mode Winstreak of the Player
	 *
	 * @return Current Op Winstreak
	 */
	public int getOpWinstreak() {
		return opWinstreak;
	}

	/**
	 * Get Best Op Mode Winstreak of the Player
	 *
	 * @return Best Op Winstreak
	 */
	public int getBestOpWinstreak() {
		return bestOpWinstreak;
	}

	/**
	 * Get Classic Mode Bow Hits of the Player
	 *
	 * @return Classic Bow Hits
	 */
	public int getClassicBowHits() {
		return classicBowHits;
	}

	/**
	 * Get Classic Mode Bow Shots of the Player
	 *
	 * @return Classic Bow Shots
	 */
	public int getClassicBowShots() {
		return classicBowShots;
	}

	/**
	 * Get Classic Mode Damage Dealt by the Player
	 *
	 * @return Classic Damage Dealt
	 */
	public int getClassicDamageDealt() {
		return classicDamageDealt;
	}

	/**
	 * Get Classic Mode Health Regenerated by the Player
	 *
	 * @return Classic Health Regenerated
	 */
	public int getClassicHealthRegenerated() {
		return classicHealthRegenerated;
	}

	/**
	 * Get Classic Mode Melee Hits of the Player
	 *
	 * @return Classic Melee Hits
	 */
	public int getClassicMeleeHits() {
		return classicMeleeHits;
	}

	/**
	 * Get Classic Mode Melee Swings of the Player
	 *
	 * @return Classic Melee Swings
	 */
	public int getClassicMeleeSwings() {
		return classicMeleeSwings;
	}

	/**
	 * Get Classic Mode Rounds Played by the Player
	 *
	 * @return Classic Rounds Played
	 */
	public int getClassicRoundsPlayed() {
		return classicRoundsPlayed;
	}

	/**
	 * Get Best Classic Mode Winstreak of the Player
	 *
	 * @return Best Classic Winstreak
	 */
	public int getBestClassicWinstreak() {
		return bestClassicWinstreak;
	}

	/**
	 * Get Current Classic Mode Winstreak of the Player
	 *
	 * @return Current Classic Winstreak
	 */
	public int getCurrentClassicWinstreak() {
		return currentClassicWinstreak;
	}

	/**
	 * Get Classic Mode Kills of the Player
	 *
	 * @return Classic Kills
	 */
	public int getClassicKills() {
		return classicKills;
	}

	/**
	 * Get Classic Mode Wins of the Player
	 *
	 * @return Classic Wins
	 */
	public int getClassicWins() {
		return classicWins;
	}

	/**
	 * Get Classic Mode Deaths of the Player
	 *
	 * @return Classic Deaths
	 */
	public int getClassicDeaths() {
		return classicDeaths;
	}

	/**
	 * Get Classic Mode Losses of the Player
	 *
	 * @return Classic Losses
	 */
	public int getClassicLosses() {
		return classicLosses;
	}

	/**
	 * Get Bow Mode Bow Hits of the Player
	 *
	 * @return Bow Bow Hits
	 */
	public int getBowBowHits() {
		return bowBowHits;
	}

	/**
	 * Get Bow Mode Wins of the Player
	 *
	 * @return Bow Wins
	 */
	public int getBowWins() {
		return bowWins;
	}

	/**
	 * Get Bow Mode Bow Shots of the Player
	 *
	 * @return Bow Bow Shots
	 */
	public int getBowBowShots() {
		return bowBowShots;
	}

	/**
	 * Get Bow Mode Health Regenerated by the Player
	 *
	 * @return Bow Health Regenerated
	 */
	public int getBowHealthRegenerated() {
		return bowHealthRegenerated;
	}

	/**
	 * Get Bow Mode Kills of the Player
	 *
	 * @return Bow Kills
	 */
	public int getBowKills() {
		return bowKills;
	}

	/**
	 * Get Bow Mode Damage Dealt by the Player
	 *
	 * @return Bow Damage Dealt
	 */
	public int getBowDamageDealt() {
		return bowDamageDealt;
	}

	/**
	 * Get Bow Mode Rounds Played by the Player
	 *
	 * @return Bow Rounds Played
	 */
	public int getBowRoundsPlayed() {
		return bowRoundsPlayed;
	}

	/**
	 * Get Bow Mode Deaths of the Player
	 *
	 * @return Bow Deaths
	 */
	public int getBowDeaths() {
		return bowDeaths;
	}

	/**
	 * Get Bow Mode Losses of the Player
	 *
	 * @return Bow Losses
	 */
	public int getBowLosses() {
		return bowLosses;
	}

	/**
	 * Get Current Bow Mode Winstreak of the Player
	 *
	 * @return Current Bow Winstreak
	 */
	public int getBowWinstreak() {
		return bowWinstreak;
	}

	/**
	 * Get Best Bow Mode Winstreak of the Player
	 *
	 * @return Best Bow Winstreak
	 */
	public int getBestBowWinstreak() {
		return bestBowWinstreak;
	}

	/**
	 * Get Current No Debuff Mode Winstreak of the Player
	 *
	 * @return Current No Debuff Winstreak
	 */
	public int getNoDebuffWinstreak() {
		return noDebuffWinstreak;
	}

	/**
	 * Get Best No Debuff Mode Winstreak of the Player
	 *
	 * @return Best No Debuff Winstreak
	 */
	public int getBestNoDebuffWinstreak() {
		return bestNoDebuffWinstreak;
	}

	/**
	 * Get Combo Mode Melee Hits of the Player
	 *
	 * @return Combo Melee Hits
	 */
	public int getComboMeleeHits() {
		return comboMeleeHits;
	}

	/**
	 * Get Combo Mode Losses of the Player
	 *
	 * @return Combo Losses
	 */
	public int getComboLosses() {
		return comboLosses;
	}

	/**
	 * Get Combo Mode Rounds Played by the Player
	 *
	 * @return Combo Rounds Played
	 */
	public int getComboRoundsPlayed() {
		return comboRoundsPlayed;
	}

	/**
	 * Get Combo Mode Health Regenerated by the Player
	 *
	 * @return Combo Health Regenerated
	 */
	public int getComboHealthRegenerated() {
		return comboHealthRegenerated;
	}

	/**
	 * Get Combo Mode Damage Dealt by the Player
	 *
	 * @return Combo Damage Dealt
	 */
	public int getComboDamageDealt() {
		return comboDamageDealt;
	}

	/**
	 * Get Combo Mode Deaths of the Player
	 *
	 * @return Combo Deaths
	 */
	public int getComboDeaths() {
		return comboDeaths;
	}

	/**
	 * Get Combo Mode Melee Swings of the Player
	 *
	 * @return Combo Melee Swings
	 */
	public int getComboDuelsMeleeSwings() {
		return comboDuelsMeleeSwings;
	}

	/**
	 * Get Combo Mode Bow Hits of the Player
	 *
	 * @return Combo Bow Hits
	 */
	public int getComboBowHits() {
		return comboBowHits;
	}

	/**
	 * Get Combo Mode Wins of the Player
	 *
	 * @return Combo Wins
	 */
	public int getComboWins() {
		return comboWins;
	}

	/**
	 * Get Combo Mode Kills of the Player
	 *
	 * @return Combo Kills
	 */
	public int getComboKills() {
		return comboKills;
	}

	/**
	 * Get Current Combo Mode Winstreak of the Player
	 *
	 * @return Current Combo Winstreak
	 */
	public int getComboWinstreak() {
		return comboWinstreak;
	}

	/**
	 * Get Best Combo Mode Winstreak of the Player
	 *
	 * @return Best Combo Winstreak
	 */
	public int getBestComboWinstreak() {
		return bestComboWinstreak;
	}

	/**
	 * Get Combo Mode Gapple Eaten by the Player
	 *
	 * @return Combo Gapple Eaten
	 */
	public int getComboGappleEaten() {
		return comboGappleEaten;
	}

	/**
	 * Get Sumo Mode Melee Hits of the Player
	 *
	 * @return Sumo Melee Hits
	 */
	public int getSumoMeleeHits() {
		return sumoMeleeHits;
	}

	/**
	 * Get Sumo Mode Melee Swings of the Player
	 *
	 * @return Sumo Melee Swings
	 */
	public int getSumoMeleeSwings() {
		return sumoMeleeSwings;
	}

	/**
	 * Get Sumo Mode Rounds Played by the Player
	 *
	 * @return Sumo Rounds Played
	 */
	public int getSumoRoundsPlayed() {
		return sumoRoundsPlayed;
	}

	/**
	 * Get Current Sumo Mode Winstreak of the Player
	 *
	 * @return Current Sumo Winstreak
	 */
	public int getSumoWinstreak() {
		return sumoWinstreak;
	}

	/**
	 * Get Best Sumo Mode Winstreak of the Player
	 *
	 * @return Best Sumo Winstreak
	 */
	public int getBestSumoWinstreak() {
		return bestSumoWinstreak;
	}

	/**
	 * Get Sumo Mode Kills of the Player
	 *
	 * @return Sumo Kills
	 */
	public int getSumoKills() {
		return sumoKills;
	}

	/**
	 * Get Sumo Mode Wins of the Player
	 *
	 * @return Sumo Wins
	 */
	public int getSumoWins() {
		return sumoWins;
	}

	/**
	 * Get Sumo Mode Deaths of the Player
	 *
	 * @return Sumo Deaths
	 */
	public int getSumoDeaths() {
		return sumoDeaths;
	}

	/**
	 * Get Sumo Mode Losses of the Player
	 *
	 * @return Sumo Losses
	 */
	public int getSumoLosses() {
		return sumoLosses;
	}

	/**
	 * Get Current Bridge Mode Winstreak of the Player
	 *
	 * @return Current Bridge Winstreak
	 */
	public int getBridgeWinstreak() {
		return bridgeWinstreak;
	}

	/**
	 * Get Best Bridge Mode Winstreak of the Player
	 *
	 * @return Best Bridge Winstreak
	 */
	public int getBestBridgeWinstreak() {
		return bestBridgeWinstreak;
	}

	/**
	 * Get Bridge Mode Health Regenerated by the Player
	 *
	 * @return Bridge Health Regenerated
	 */
	public int getBridgeHealthRegenerated() {
		return bridgeHealthRegenerated;
	}

	/**
	 * Get Bridge Mode Goals of the Player
	 *
	 * @return Bridge Goals
	 */
	public int getBridgeGoals() {
		return bridgeGoals;
	}

	/**
	 * Get Bridge Mode Damage Dealt by the Player
	 *
	 * @return Bridge Damage Dealt
	 */
	public int getBridgeDamageDealt() {
		return bridgeDamageDealt;
	}

	/**
	 * Get Bridge Mode Melee Hits of the Player
	 *
	 * @return Bridge Melee Hits
	 */
	public int getBridgeMeleeHits() {
		return bridgeMeleeHits;
	}

	/**
	 * Get Bridge Mode Blocks Placed by the Player
	 *
	 * @return Bridge Blocks Placed
	 */
	public int getBridgeBlocksPlaced() {
		return bridgeBlocksPlaced;
	}

	/**
	 * Get Bridge Mode Melee Swings of the Player
	 *
	 * @return Bridge Melee Swings
	 */
	public int getBridgeMeleeSwings() {
		return bridgeMeleeSwings;
	}

	/**
	 * Get Bridge Mode Deaths of the Player
	 *
	 * @return Bridge Deaths
	 */
	public int getBridgeDeaths() {
		return bridgeDeaths;
	}

	/**
	 * Get Bridge Mode Kills of the Player
	 *
	 * @return Bridge Kills
	 */
	public int getBridgeKills() {
		return bridgeKills;
	}

	/**
	 * Get Bridge Mode Rounds Played by the Player
	 *
	 * @return Bridge Rounds Played
	 */
	public int getBridgeRoundsPlayed() {
		return bridgeRoundsPlayed;
	}

	/**
	 * Get Bridge Mode Wins of the Player
	 *
	 * @return Bridge Wins
	 */
	public int getBridgeWins() {
		return bridgeWins;
	}

	/**
	 * Get Bridge Mode Bow Shots of the Player
	 *
	 * @return Bridge Bow Shots
	 */
	public int getBridgeBowShots() {
		return bridgeBowShots;
	}

	/**
	 * Get Bridge Mode Losses of the Player
	 *
	 * @return Bridge Losses
	 */
	public int getBridgeLosses() {
		return bridgeLosses;
	}

	/**
	 * Get Bridge Mode Bow hits of the Player
	 *
	 * @return Bridge Bow Hits
	 */
	public int getBridgeBowHits() {
		return bridgeBowHits;
	}

	@Override
	public String toString() {
		return "Duels{" +
				"gamesPlayed=" + gamesPlayed +
				", meleeSwings=" + meleeSwings +
				", meleeHits=" + meleeHits +
				", wins=" + wins +
				", roundsPlayed=" + roundsPlayed +
				", kills=" + kills +
				", healthRegenerated=" + healthRegenerated +
				", damageDealt=" + damageDealt +
				", recentPlays='" + recentPlays + '\'' +
				", losses=" + losses +
				", deaths=" + deaths +
				", healPotsUsed=" + healPotsUsed +
				", blitzKit='" + blitzKit + '\'' +
				", megaWallsKit='" + megaWallsKit + '\'' +
				", chatEnabled='" + chatEnabled + '\'' +
				", coins=" + coins +
				", unlockedPackages=" + unlockedPackages +
				", cosmeticTitle='" + cosmeticTitle + '\'' +
				", lootChests=" + lootChests +
				", projectileTrail='" + projectileTrail + '\'' +
				", emblem='" + emblem + '\'' +
				", killMessages='" + killMessages + '\'' +
				", killEffect='" + killEffect + '\'' +
				", victoryDance='" + victoryDance + '\'' +
				", auras='" + auras + '\'' +
				", weaponPacks='" + weaponPacks + '\'' +
				", progressMode='" + progressMode + '\'' +
				", status='" + status + '\'' +
				", blocksPlaced=" + blocksPlaced +
				", gappleEaten=" + gappleEaten +
				", goals=" + goals +
				", hat='" + hat + '\'' +
				", cage='" + cage + '\'' +
				", goal='" + goal + '\'' +
				", uhcHealthRegenerated=" + uhcHealthRegenerated +
				", uhcLosses=" + uhcLosses +
				", uhcMeleeSwings=" + uhcMeleeSwings +
				", uhcRoundsPlayed=" + uhcRoundsPlayed +
				", uhcDeaths=" + uhcDeaths +
				", uhcDamageDealt=" + uhcDamageDealt +
				", uhcMeleeHits=" + uhcMeleeHits +
				", uhcBowShots=" + uhcBowShots +
				", uhcBowHits=" + uhcBowHits +
				", uhcKills=" + uhcKills +
				", uhcWins=" + uhcWins +
				", uhcWinStreak=" + uhcWinStreak +
				", bestUhcWinStreak=" + bestUhcWinStreak +
				", uhcBlocksPlaced=" + uhcBlocksPlaced +
				", uhcGappleEaten=" + uhcGappleEaten +
				", skywarsBlocksPlaced=" + skywarsBlocksPlaced +
				", skywarsDamageDealt=" + skywarsDamageDealt +
				", skywarsHealthRegenerated=" + skywarsHealthRegenerated +
				", skywarsKills=" + skywarsKills +
				", skywarsMeleeHits=" + skywarsMeleeHits +
				", skywarsMeleeSwings=" + skywarsMeleeSwings +
				", skywarsRoundsPlayed=" + skywarsRoundsPlayed +
				", skywarsWins=" + skywarsWins +
				", skywarsBowHits=" + skywarsBowHits +
				", skywarsBowShots=" + skywarsBowShots +
				", skywarsDeaths=" + skywarsDeaths +
				", skywarsLosses=" + skywarsLosses +
				", skywarsWinstreak=" + skywarsWinstreak +
				", bestSkywarsWinstreak=" + bestSkywarsWinstreak +
				", megaWallsWinstreak=" + megaWallsWinstreak +
				", bestMegaWallsWinstreak=" + bestMegaWallsWinstreak +
				", megaWallsBlocksPlaced=" + megaWallsBlocksPlaced +
				", megaWallsBowHits=" + megaWallsBowHits +
				", megaWallsBowShots=" + megaWallsBowShots +
				", megaWallsDamageDealt=" + megaWallsDamageDealt +
				", megaWallsDeaths=" + megaWallsDeaths +
				", megaWallsHealthRegenerated=" + megaWallsHealthRegenerated +
				", megaWallsLosses=" + megaWallsLosses +
				", megaWallsMeleeHits=" + megaWallsMeleeHits +
				", megaWallsMeleeSwings=" + megaWallsMeleeSwings +
				", megaWallsRoundsPlayed=" + megaWallsRoundsPlayed +
				", megaWallsKills=" + megaWallsKills +
				", megaWallsWins=" + megaWallsWins +
				", blitzWinstreak=" + blitzWinstreak +
				", bestBlitzWinstreak=" + bestBlitzWinstreak +
				", blitzMeleeSwings=" + blitzMeleeSwings +
				", blitzDamageDealt=" + blitzDamageDealt +
				", blitzMeleeHits=" + blitzMeleeHits +
				", blitzRoundsPlayed=" + blitzRoundsPlayed +
				", blitzWins=" + blitzWins +
				", blitzHealthRegenerated=" + blitzHealthRegenerated +
				", blitzKills=" + blitzKills +
				", blitzLosses=" + blitzLosses +
				", blitzDeaths=" + blitzDeaths +
				", blitzBowShots=" + blitzBowShots +
				", blitzBowHits=" + blitzBowHits +
				", blitzBlocksPlaced=" + blitzBlocksPlaced +
				", opDamageDealt=" + opDamageDealt +
				", opKills=" + opKills +
				", opMeleeSwings=" + opMeleeSwings +
				", opMeleeHits=" + opMeleeHits +
				", opHealthRegenerated=" + opHealthRegenerated +
				", opWins=" + opWins +
				", opRoundsPlayed=" + opRoundsPlayed +
				", opDeaths=" + opDeaths +
				", opLosses=" + opLosses +
				", opBowShots=" + opBowShots +
				", opBowHits=" + opBowHits +
				", opWinstreak=" + opWinstreak +
				", bestOpWinstreak=" + bestOpWinstreak +
				", classicBowHits=" + classicBowHits +
				", classicBowShots=" + classicBowShots +
				", classicDamageDealt=" + classicDamageDealt +
				", classicHealthRegenerated=" + classicHealthRegenerated +
				", classicMeleeHits=" + classicMeleeHits +
				", classicMeleeSwings=" + classicMeleeSwings +
				", classicRoundsPlayed=" + classicRoundsPlayed +
				", bestClassicWinstreak=" + bestClassicWinstreak +
				", currentClassicWinstreak=" + currentClassicWinstreak +
				", classicKills=" + classicKills +
				", classicWins=" + classicWins +
				", classicDeaths=" + classicDeaths +
				", classicLosses=" + classicLosses +
				", bowBowHits=" + bowBowHits +
				", bowWins=" + bowWins +
				", bowBowShots=" + bowBowShots +
				", bowHealthRegenerated=" + bowHealthRegenerated +
				", bowKills=" + bowKills +
				", bowDamageDealt=" + bowDamageDealt +
				", bowRoundsPlayed=" + bowRoundsPlayed +
				", bowDeaths=" + bowDeaths +
				", bowLosses=" + bowLosses +
				", bowWinstreak=" + bowWinstreak +
				", bestBowWinstreak=" + bestBowWinstreak +
				", noDebuffWinstreak=" + noDebuffWinstreak +
				", bestNoDebuffWinstreak=" + bestNoDebuffWinstreak +
				", comboMeleeHits=" + comboMeleeHits +
				", comboLosses=" + comboLosses +
				", comboRoundsPlayed=" + comboRoundsPlayed +
				", comboHealthRegenerated=" + comboHealthRegenerated +
				", comboDamageDealt=" + comboDamageDealt +
				", comboDeaths=" + comboDeaths +
				", comboDuelsMeleeSwings=" + comboDuelsMeleeSwings +
				", comboBowHits=" + comboBowHits +
				", comboWins=" + comboWins +
				", comboKills=" + comboKills +
				", comboWinstreak=" + comboWinstreak +
				", bestComboWinstreak=" + bestComboWinstreak +
				", comboGappleEaten=" + comboGappleEaten +
				", sumoMeleeHits=" + sumoMeleeHits +
				", sumoMeleeSwings=" + sumoMeleeSwings +
				", sumoRoundsPlayed=" + sumoRoundsPlayed +
				", sumoWinstreak=" + sumoWinstreak +
				", bestSumoWinstreak=" + bestSumoWinstreak +
				", sumoKills=" + sumoKills +
				", sumoWins=" + sumoWins +
				", sumoDeaths=" + sumoDeaths +
				", sumoLosses=" + sumoLosses +
				", bridgeWinstreak=" + bridgeWinstreak +
				", bestBridgeWinstreak=" + bestBridgeWinstreak +
				", bridgeHealthRegenerated=" + bridgeHealthRegenerated +
				", bridgeGoals=" + bridgeGoals +
				", bridgeDamageDealt=" + bridgeDamageDealt +
				", bridgeMeleeHits=" + bridgeMeleeHits +
				", bridgeBlocksPlaced=" + bridgeBlocksPlaced +
				", bridgeMeleeSwings=" + bridgeMeleeSwings +
				", bridgeDeaths=" + bridgeDeaths +
				", bridgeKills=" + bridgeKills +
				", bridgeRoundsPlayed=" + bridgeRoundsPlayed +
				", bridgeWins=" + bridgeWins +
				", bridgeBowShots=" + bridgeBowShots +
				", bridgeLosses=" + bridgeLosses +
				", bridgeBowHits=" + bridgeBowHits +
				'}';
	}
}